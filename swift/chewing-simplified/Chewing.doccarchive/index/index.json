{"includedArchiveIdentifiers":["chewing-simplified.Chewing"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrapper\/init(candperpage:maxchisymbollen:datadirectorypath:loggingconfig:)","title":"init(candPerPage: Int, maxChiSymbolLen: Int, dataDirectoryPath: String?, loggingConfig: LoggingConfig) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrapper\/onbufferupdate","title":"var onBufferUpdate: ((String) -> Void)?","type":"property"},{"path":"\/documentation\/chewing\/chewingwrapper\/oncandidateupdate","title":"var onCandidateUpdate: (([String]) -> Void)?","type":"property"},{"path":"\/documentation\/chewing\/chewingwrapper\/oncommit","title":"var onCommit: ((String) -> Void)?","type":"property"},{"path":"\/documentation\/chewing\/chewingwrapper\/onpreeditupdate","title":"var onPreeditUpdate: ((String) -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrapper\/process(key:)-7dki0","title":"func process(key: ChewingKey)","type":"method"},{"path":"\/documentation\/chewing\/chewingwrapper\/process(key:)-8cnha","title":"func process(key: Character)","type":"method"},{"path":"\/documentation\/chewing\/chewingwrapper\/selectcandidate(at:)","title":"func selectCandidate(at: Int)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrapper\/datadirectorypath","title":"static var dataDirectoryPath: String?","type":"property"}],"path":"\/documentation\/chewing\/chewingwrapper","title":"ChewingWrapper","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/all","title":"static let all: LogLevel","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/critical","title":"static let critical: LogLevel","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/debug","title":"static let debug: LogLevel","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/error","title":"static let error: LogLevel","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/info","title":"static let info: LogLevel","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/verbose","title":"static let verbose: LogLevel","type":"property"},{"path":"\/documentation\/chewing\/loglevel\/warning","title":"static let warning: LogLevel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/chewing\/loglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/chewing\/loglevel\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/chewing\/loglevel\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/chewing\/loglevel\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/chewing\/loglevel\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/chewing\/loglevel\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/chewing\/loglevel","title":"LogLevel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/chewing\/loggingconfig\/init(enabled:levels:callback:)","title":"init(enabled: Bool, levels: LogLevel, callback: ((LogLevel, String) -> Void)?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/loggingconfig\/callback","title":"let callback: ((LogLevel, String) -> Void)?","type":"property"},{"path":"\/documentation\/chewing\/loggingconfig\/enabled","title":"let enabled: Bool","type":"property"},{"path":"\/documentation\/chewing\/loggingconfig\/levels","title":"let levels: LogLevel","type":"property"}],"path":"\/documentation\/chewing\/loggingconfig","title":"LoggingConfig","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingkey\/backspace","title":"case backspace","type":"case"},{"path":"\/documentation\/chewing\/chewingkey\/enter","title":"case enter","type":"case"},{"path":"\/documentation\/chewing\/chewingkey\/space","title":"case space","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingkey\/cvalue","title":"var cValue: CChar","type":"property"},{"path":"\/documentation\/chewing\/chewingkey\/character","title":"var character: Character","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/chewing\/chewingkey\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/chewing\/chewingkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/chewing\/chewingkey","title":"ChewingKey","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrappererror\/initializationfailed","title":"case initializationFailed","type":"case"},{"path":"\/documentation\/chewing\/chewingwrappererror\/notfound","title":"case notFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrappererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/chewing\/chewingwrappererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/chewing\/chewingwrappererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/chewing\/chewingwrappererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/chewing\/chewingwrappererror","title":"ChewingWrapperError","type":"enum"}],"path":"\/documentation\/chewing","title":"Chewing","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}